{"ast":null,"code":"var _jsxFileName = \"/home/aluno/Documentos/2020-clock/src/Components/Clock/WorldClock.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass WorldClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  tick() {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      this.setState({\n        error: null,\n        isLoaded: true,\n        date: new Date(result.datetime)\n      });\n    }, // Nota: É importante lidar com os erros aqui\n    // em vez de um bloco catch() para não recebermos\n    // exceções de erros dos componentes.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }); //codigo    \n    //this.setState({\n    //date: new Date(),\n    //isLoaded: true\n    //});\n    //this.state = { date: new Date };\n  }\n\n  render() {\n    let {\n      isLoaded,\n      date,\n      error\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"World clock is :/ (\", error, \")\"));\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"World clock is\", date.toLocaleTimeString(), \".\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"World clock is\", date.toLocaleTimeString(), \".\"));\n    }\n  }\n\n}\n\nexport default WorldClock;","map":{"version":3,"sources":["/home/aluno/Documentos/2020-clock/src/Components/Clock/WorldClock.js"],"names":["React","ReactDOM","WorldClock","Component","constructor","props","state","error","isLoaded","date","Date","componentDidMount","timerID","setInterval","tick","fetch","then","res","json","result","setState","datetime","render","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHK,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDA,EAAAA,IAAI,GAAG;AACLC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAE,IADK;AAEZC,QAAAA,QAAQ,EAAE,IAFE;AAGZC,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASS,MAAM,CAACE,QAAhB;AAHM,OAAd;AAKD,KATL,EAUI;AACA;AACA;AACCd,IAAAA,KAAD,IAAW;AACT,WAAKa,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAlBL,EADK,CAqBL;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEd,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBF,MAAAA;AAAlB,QAA4B,KAAKD,KAArC;;AACA,QAAIC,KAAJ,EAAW;AACT,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBA,KAAxB,MADF,CADF;AAKD,KAND,MAOK,IAAI,CAACC,QAAL,EAAe;AAClB,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBC,IAAI,CAACc,kBAAL,EAAnB,MADF,CADF;AAID,KALI,MAMA;AACH,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBd,IAAI,CAACc,kBAAL,EAAnB,MADF,CADF;AAID;AACF;;AAlEsC;;AAqEzC,eAAerB,UAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass WorldClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      date: new Date(),\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  tick() {\n    fetch(\"https://api.example.com/items\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            error: null,\n            isLoaded: true,\n            date: new Date(result.datetime)\n          });\n        },\n        // Nota: É importante lidar com os erros aqui\n        // em vez de um bloco catch() para não recebermos\n        // exceções de erros dos componentes.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    //codigo    \n    //this.setState({\n    //date: new Date(),\n    //isLoaded: true\n    //});\n    //this.state = { date: new Date };\n  }\n\n  render() {\n    let { isLoaded, date, error } = this.state;\n    if (error) {\n      return (\n        <div className=\"main\">\n          <h2>World clock is :/ ({error})</h2>\n        </div>)\n\n    }\n    else if (!isLoaded) {\n      return (\n        <div className=\"main\">\n          <h2>World clock is{date.toLocaleTimeString()}.</h2>\n        </div>)\n    }\n    else {\n      return (\n        <div className=\"main\">\n          <h2>World clock is{date.toLocaleTimeString()}.</h2>\n        </div>)\n    }\n  }\n}\n\nexport default WorldClock;"]},"metadata":{},"sourceType":"module"}